{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Json1",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "flatten1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id as string,",
				"          parentEntityId as string,",
				"          statusCode as string,",
				"          number as string,",
				"          companyProductCode as string,",
				"          lineofBusinessCode as string,",
				"          effectiveDate as string,",
				"          expirationDate as string,",
				"          createdDate as string,",
				"          createdBy as string,",
				"          ratedPremium as (id as string, parentEntityTypeName as string, parentEntityId as string, typeCode as string, value as string, currencyCode as string, levelCode as string, appliesToCode as string, occurrenceYear as integer, valueType as string, pricedValue as string, pricedAmount as string, originalAmount as string, editableOnTransaction as boolean),",
				"          quotedPremium as (id as string, parentEntityTypeName as string, parentEntityId as string, typeCode as string, value as string, currencyCode as string, levelCode as string, appliesToCode as string, occurrenceYear as integer, valueType as string, pricedValue as string, pricedAmount as string, originalAmount as string, editableOnTransaction as boolean),",
				"          premiumDueDate as string,",
				"          amountItem as string[],",
				"          tax as string[],",
				"          referenceNumber as string,",
				"          stage as string,",
				"          policyTerm as string,",
				"          operatingCompanyCode as string,",
				"          extendedAttributes as string[],",
				"          agent as (id as string, typeCode as string, number as integer, parentEntityId as string, parentEntityTypeName as string, partyName as string, isCancelled as boolean, partyCode as string, partyIdentifiers as string[]),",
				"          brokerBranch as (id as string, parentEntityId as string, parentEntityTypeName as string, maintenanceAgency as string, partyName as string, isCancelled as boolean, agencyCode as string, partyCode as string, partyIdentifiers as string[]),",
				"          coverage as string[],",
				"          coverageGroup as string[],",
				"          clientParticipant as (id as string, roleCode as string, parentEntityId as string, parentEntityTypeName as string, partyCode as string, partyName as string, questionAnswer as string[], effectiveDate as string, expirationDate as string, isCancelled as boolean, subRoleCode as string, originalPartyName as string, extendedAttributes as string[])[],",
				"          mgaParticipant as string[],",
				"          section as (id as string, parentEntityTypeName as string, parentEntityId as string, lineOfBusinessCode as string, sequenceNumber as integer, declinedIndicator as boolean, description as string, coverTypeCode as string, underwritingYear as integer, coverage as (id as string, typeCode as string, sequenceNumber as integer, parentEntityId as string, parentEntityTypeName as string, fullPremium as string, effectiveDate as string, expirationDate as string, limit as (id as string, typeCode as string, sequenceNumber as string, parentEntityTypeName as string, parentEntityId as string, name as string, valueType as string, value as string, currencyCode as string, extendedAttributes as string[])[], deductible as (id as string, typeCode as string, sequenceNumber as string, parentEntityTypeName as string, parentEntityId as string, name as string, valueType as string, value as string, currencyCode as string, extendedAttributes as string[])[], option as string[], isCancelled as boolean, tax as string[], amountItem as string[], extendedAttributes as string[], appliesToLevel as string)[], subjectivity as string[], tax as (id as string, parentEntityId as string, parentEntityTypeName as string, typeCode as string, baseAmount as string, percentage as integer, unitCount as integer, amount as string, value as integer, valueType as string, amountItem as (id as string, parentEntityTypeName as string, parentEntityId as string, typeCode as string, value as string, currencyCode as string, levelCode as string, appliesToCode as string, occurrenceYear as integer, valueType as string, pricedValue as string, subTypeCode as string, pricedAmount as string, originalAmount as string, editableOnTransaction as boolean))[], sectionItem as string[], location as string[], questionAnswer as string[], coverageGroup as string[], effectiveDate as string, expirationDate as string, isCancelled as boolean, triaRate as integer, amountItem as (id as string, parentEntityTypeName as string, parentEntityId as string, typeCode as string, value as string, currencyCode as string, levelCode as string, appliesToCode as string, occurrenceYear as integer, valueType as string, pricedValue as string, subTypeCode as string, pricedAmount as string, originalAmount as string, editableOnTransaction as boolean, description as string)[], extendedAttributes as string[], insurableObject as (id as string, parentEntityId as string, parentEntityTypeName as string, typeCode as string, extendedAttributes as (name as string, value as string)[], isCancelled as boolean)[], carrierParticipant as string[], pricedIndicator as boolean, isSharedCarrier as boolean, mappedLocations as string[], insurableObjectParticipant as string[], taxJurisdiction as string[], pricingFactor as string[], deductible as string[])[],",
				"          location as string[],",
				"          productVersion as string,",
				"          questionAnswer as (id as string, parentEntityId as string, parentEntityTypeName as string, questionText as string, value as integer, questionCode as string, isCancelled as boolean, extendedAttributes as string[])[],",
				"          claim as string[],",
				"          paymentInfo as (id as string, parentEntityId as string, parentEntityTypeName as string, billingType as string, paymentPlan as string, commissionPlan as string, commissionReturnable as boolean),",
				"          underwriterDecisionInfo as (id as string, userName as string, firstName as string, lastName as string, roleCode as string, approvalStatus as boolean, decisionDate as string)[],",
				"          minorVersion as integer,",
				"          majorVersion as integer,",
				"          businessPurposeTypeCode as string,",
				"          businessPurposeType as string,",
				"          statusCodeDisplayName as string,",
				"          reasons as string[],",
				"          submissionCreationDate as string,",
				"          quoteId as string,",
				"          quoteNumber as string,",
				"          bindingDate as string,",
				"          issuanceDate as string,",
				"          carrierProcessingType as string,",
				"          endorsement as string[],",
				"          certificateNumber as string,",
				"          currencyCode as string,",
				"          productTimeZone as string,",
				"          renewal as (id as string, parentEntityId as string, parentEntityTypeName as string, renewedBy as string, typeCode as string, renewalTriggerInDays as integer, extendedAttributes as string[]),",
				"          originalPolicyNumber as string,",
				"          priorPolicy as string[],",
				"          sanctionCheckInfo as string[],",
				"          underlyingPolicies as string[],",
				"          forms as string[],",
				"          trackingNumber as string,",
				"          masterContractIndicator as boolean,",
				"          originalBusinessPurposeTypeCode as string,",
				"          originalBusinessPurposeType as string,",
				"          sectionWiseLocationAllocation as boolean,",
				"          termDurationInDays as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     limit: 100,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'arrayOfDocuments') ~> source1",
				"source1 foldDown(unrollMultiple(clientParticipant,section),",
				"     mapColumn(",
				"          each(match(/* All input columns */ true()),",
				"               /* Input name */ $$ = $$),",
				"          clientParticipantid = clientParticipant.id,",
				"          sectionid = section.id",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten1"
			]
		}
	}
}