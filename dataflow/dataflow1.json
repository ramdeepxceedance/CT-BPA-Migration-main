{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Json1",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "flatten1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          agent as (id as string, isCancelled as boolean, number as boolean, parentEntityId as string, parentEntityTypeName as string, partyCode as string, partyIdentifiers as string[], partyName as string, typeCode as string),",
				"          amountItem as string[],",
				"          bindingDate as string,",
				"          brokerBranch as (agencyCode as string, id as string, isCancelled as boolean, maintenanceAgency as string, parentEntityId as string, parentEntityTypeName as string, partyCode as string, partyIdentifiers as string[], partyName as string),",
				"          businessPurposeType as string,",
				"          businessPurposeTypeCode as string,",
				"          carrierProcessingType as string,",
				"          certificateNumber as short,",
				"          claim as string[],",
				"          clientParticipant as (effectiveDate as date, expirationDate as date, extendedAttributes as string[], id as string, isCancelled as boolean, originalPartyName as string, parentEntityId as string, parentEntityTypeName as string, partyCode as string, partyName as string, questionAnswer as string[], roleCode as string, subRoleCode as string)[],",
				"          companyProductCode as string,",
				"          coverage as string[],",
				"          coverageGroup as string[],",
				"          createdBy as string,",
				"          createdDate as string,",
				"          currencyCode as string,",
				"          effectiveDate as date,",
				"          endorsement as string[],",
				"          expirationDate as date,",
				"          extendedAttributes as string[],",
				"          forms as string[],",
				"          id as string,",
				"          issuanceDate as string,",
				"          lineofBusinessCode as string,",
				"          location as string[],",
				"          majorVersion as boolean,",
				"          masterContractIndicator as boolean,",
				"          mgaParticipant as string[],",
				"          minorVersion as short,",
				"          number as string,",
				"          operatingCompanyCode as string,",
				"          originalBusinessPurposeType as string,",
				"          originalBusinessPurposeTypeCode as string,",
				"          originalPolicyNumber as string,",
				"          parentEntityId as string,",
				"          paymentInfo as (billingType as string, commissionPlan as string, commissionReturnable as boolean, id as string, parentEntityId as string, parentEntityTypeName as string, paymentPlan as string),",
				"          policyTerm as string,",
				"          premiumDueDate as date,",
				"          priorPolicy as string[],",
				"          productTimeZone as string,",
				"          productVersion as double,",
				"          questionAnswer as (extendedAttributes as string[], id as string, isCancelled as boolean, parentEntityId as string, parentEntityTypeName as string, questionCode as string, questionText as string, value as boolean)[],",
				"          quoteId as string,",
				"          quoteNumber as string,",
				"          quotedPremium as (appliesToCode as string, currencyCode as string, editableOnTransaction as boolean, id as string, levelCode as string, occurrenceYear as boolean, originalAmount as double, parentEntityId as string, parentEntityTypeName as string, pricedAmount as double, pricedValue as double, typeCode as string, value as double, valueType as string),",
				"          ratedPremium as (appliesToCode as string, currencyCode as string, editableOnTransaction as boolean, id as string, levelCode as string, occurrenceYear as boolean, originalAmount as double, parentEntityId as string, parentEntityTypeName as string, pricedAmount as double, pricedValue as double, typeCode as string, value as double, valueType as string),",
				"          reasons as string[],",
				"          referenceNumber as string,",
				"          renewal as (extendedAttributes as string[], id as string, parentEntityId as string, parentEntityTypeName as string, renewalTriggerInDays as short, renewedBy as string, typeCode as string),",
				"          sanctionCheckInfo as string[],",
				"          section as (amountItem as (appliesToCode as string, currencyCode as string, description as string, editableOnTransaction as boolean, id as string, isRefundable as boolean, levelCode as string, maxValue as double, minValue as double, occurrenceYear as boolean, originalAmount as double, parentEntityId as string, parentEntityTypeName as string, pricedAmount as double, pricedValue as double, pricingModifyReason as string, sequenceNumber as boolean, subTypeCode as string, typeCode as string, value as double, valueType as string)[], carrierParticipant as string[], coverTypeCode as string, coverage as (amountItem as string[], appliesToLevel as string, deductible as (currencyCode as string, extendedAttributes as string[], id as string, name as string, parentEntityId as string, parentEntityTypeName as string, sequenceNumber as double, typeCode as string, value as double, valueType as string)[], effectiveDate as date, expirationDate as date, extendedAttributes as string[], fullPremium as double, id as string, isCancelled as boolean, limit as (currencyCode as string, extendedAttributes as string[], id as string, name as string, parentEntityId as string, parentEntityTypeName as string, sequenceNumber as double, typeCode as string, value as double, valueType as string)[], option as string[], parentEntityId as string, parentEntityTypeName as string, sequenceNumber as boolean, tax as string[], typeCode as string)[], coverageGroup as string[], declinedIndicator as boolean, deductible as string[], description as string, effectiveDate as date, expirationDate as date, extendedAttributes as string[], id as string, insurableObject as (extendedAttributes as (name as string, value as string)[], id as string, isCancelled as boolean, parentEntityId as string, parentEntityTypeName as string, typeCode as string)[], insurableObjectParticipant as string[], isCancelled as boolean, isSharedCarrier as boolean, lineOfBusinessCode as string, location as string[], mappedLocations as string[], parentEntityId as string, parentEntityTypeName as string, pricedIndicator as boolean, pricingFactor as string[], questionAnswer as string[], sectionItem as string[], sequenceNumber as boolean, subjectivity as string[], tax as (amount as double, amountItem as (appliesToCode as string, currencyCode as string, editableOnTransaction as boolean, id as string, isRefundable as boolean, levelCode as string, occurrenceYear as boolean, originalAmount as double, parentEntityId as string, parentEntityTypeName as string, pricedAmount as double, pricedValue as double, sequenceNumber as boolean, subTypeCode as string, typeCode as string, value as double, valueType as string), baseAmount as double, id as string, parentEntityId as string, parentEntityTypeName as string, percentage as boolean, ratingAppliesToCode as string, ratingBasisCode as string, sequenceNumber as boolean, typeCode as string, unitCount as boolean, value as boolean, valueType as string)[], taxJurisdiction as string[], triaRate as boolean, underwritingYear as boolean)[],",
				"          sectionWiseLocationAllocation as boolean,",
				"          stage as string,",
				"          statusCode as string,",
				"          statusCodeDisplayName as string,",
				"          submissionCreationDate as string,",
				"          tax as string[],",
				"          termDurationInDays as boolean,",
				"          trackingNumber as string,",
				"          underlyingPolicies as string[],",
				"          underwriterDecisionInfo as (approvalStatus as boolean, decisionDate as string, firstName as string, id as string, lastName as string, roleCode as string, userName as string)[]",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'arrayOfDocuments',",
				"     unquotedColumnNames: true) ~> source1",
				"source1 foldDown(unroll(),",
				"     mapColumn(",
				"          each(match(/* All input columns */ true()),",
				"               /* Input name */ $$ = $$)",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten1"
			]
		}
	}
}