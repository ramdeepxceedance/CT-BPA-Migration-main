{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-eus-idp-d-01"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pl_stage_policySectionWithCoverages')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "target_section_with_cov",
						"type": "ExecuteDataFlow",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_stage_section",
								"type": "DataFlowReference",
								"parameters": {
									"policyPrefix": {
										"value": "'@{pipeline().globalParameters.policyPrefix}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"SScoverages": {},
									"EcmBPACovMap": {},
									"targetCoverage": {},
									"targetPolicy": {},
									"source2": {},
									"targetPolicyCopy": {},
									"sourceStgPolicy": {},
									"targetSection": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "addRiskToSection",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "target_section_with_cov",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_stage_risk_Location_to_sections",
								"type": "DataFlowReference",
								"parameters": {
									"policyPrefix": {
										"value": "'@{pipeline().globalParameters.policyPrefix}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"targetCoverage": {},
									"stgCoverage": {},
									"srcCovergeBpaSectionMap": {},
									"riskById": {},
									"section": {},
									"targetLocation": {},
									"source1": {},
									"sectionTarget": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "addDefaultSection",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "addRiskToSection",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_addSec000",
								"type": "DataFlowReference",
								"parameters": {
									"policyPrefix": {
										"value": "'@{pipeline().globalParameters.policyPrefix}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"source1": {},
									"targetLocation": {},
									"targetRisk": {},
									"source2": {},
									"stgPolicy": {},
									"sec000Coverages": {},
									"osBpaCovMap": {},
									"targetSection": {},
									"sink2": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Staging Data Movement"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_stage_risk')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "update extended attr",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_stage_risk",
								"type": "DataFlowReference",
								"parameters": {
									"isRiskUpdateOnly": {
										"value": "@variables('isRiskUpdateOnly')",
										"type": "Expression"
									},
									"policyPrefix": {
										"value": "'@{pipeline().globalParameters.policyPrefix}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"ssRisk": {},
									"riskDetails": {},
									"stgPolicy": {},
									"lookUp": {},
									"lookupType": {},
									"targetPolicy": {},
									"targetRisk": {},
									"targetRiskCfa": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Switch1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "isRiskUpdateOnly",
							"value": true
						}
					},
					{
						"name": "risk",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_stage_risk",
								"type": "DataFlowReference",
								"parameters": {
									"isRiskUpdateOnly": "false()",
									"policyPrefix": {
										"value": "'@{pipeline().globalParameters.policyPrefix}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"ssRisk": {},
									"riskDetails": {},
									"stgPolicy": {},
									"lookUp": {},
									"lookupType": {},
									"targetPolicy": {},
									"targetRisk": {},
									"targetRiskCfa": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Switch1",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "risk",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@pipeline().globalParameters.policyPrefix",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "EMP",
									"activities": [
										{
											"name": "riskDetail_EMP",
											"type": "ExecuteDataFlow",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"dataflow": {
													"referenceName": "df_stage_risk_details",
													"type": "DataFlowReference",
													"parameters": {},
													"datasetParameters": {
														"riskDetailsStaging": {},
														"targetRisk": {},
														"horseDetailsLookup": {},
														"sourceRefLookUp": {},
														"sourceRefLookUpType": {},
														"riskDetails": {}
													}
												},
												"staging": {},
												"compute": {
													"coreCount": 8,
													"computeType": "General"
												},
												"traceLevel": "Fine"
											}
										}
									]
								},
								{
									"value": "CFA",
									"activities": [
										{
											"name": "riskDetail_CFA",
											"type": "ExecuteDataFlow",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"dataflow": {
													"referenceName": "df_stage_risk_details_cfa",
													"type": "DataFlowReference",
													"parameters": {},
													"datasetParameters": {
														"riskDetailsStaging": {},
														"targetRisk": {},
														"sourceRefLookUp": {},
														"sourceRefLookUpType": {},
														"riskDetailMaxIdTarget": {},
														"riskDetails": {},
														"maxIdLookup": {}
													}
												},
												"staging": {},
												"compute": {
													"coreCount": 8,
													"computeType": "General"
												},
												"traceLevel": "Fine"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"isRiskUpdateOnly": {
						"type": "Boolean"
					}
				},
				"folder": {
					"name": "Staging Data Movement"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_target_quoteinfo_deprecated')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "quoteInfo",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_target_quoteInfo_deprecated",
								"type": "DataFlowReference",
								"parameters": {
									"policyPrefix": {
										"value": "'@{pipeline().globalParameters.policyPrefix}'",
										"type": "Expression"
									},
									"policies": {
										"value": "@pipeline().globalParameters.policies",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"policyTarget": {},
									"policyTrackerTarget": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "utility"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_target_updateagentparty')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Update Party and Agent in Policy json",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_update_stage_policy_agent_clientparticipant",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"policyPartyBridgeStaging": {},
									"partyroleStaging": {},
									"agencyTarget": {},
									"policyTarget": {},
									"policyTargetSink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Staging Data Movement/JsonUpdate"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_temp_clientPartToBlank')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_clientPartToBlank",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"policy": {},
									"ecmInsured": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Staging Data Movement/JsonUpdate"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_rater_report_master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set round",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(variables('lowerBound'), variables('round'))",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "raterReport",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_quote_premium",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"lb": {
												"value": "@variables('lowerBound')",
												"type": "Expression"
											},
											"hb": {
												"value": "@variables('higherBound')",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "update lowerbound",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "raterReport",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "lowerBound",
										"value": {
											"value": "@variables('higherBound')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "update higherbound",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "update lowerbound",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "higherBound",
										"value": {
											"value": "@add(variables('lowerBound'),500)",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Set lowerBound",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "lowerBound",
							"value": 1
						}
					},
					{
						"name": "Set higherbound",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set lowerBound",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "higherBound",
							"value": 500
						}
					},
					{
						"name": "Set round",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set higherbound",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "round",
							"value": 18
						}
					},
					{
						"name": "Execute Compare Premium",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_compare_premium",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute Premium Report",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Compare Premium",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_premium_report",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"higherBound": {
						"type": "Integer"
					},
					"round": {
						"type": "Integer"
					},
					"lowerBound": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "utility/rating"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_source_policy_master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "polPolicy",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_source_policy",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "insurableObjPipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Policy PartyRole",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_source_polRiskAndDetails",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "locationpipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "insurableObjPipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_source_location",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "coveragePipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "locationpipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_source_coverage_coverageext",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "riskBridge",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "coveragePipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_source_loc_risk_bridge",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "txn premiums",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "riskBridge",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_source_policy_txn",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Policy PartyRole",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "polPolicy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_source_policy_partyrole_bridge",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "tx and limits",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "txn premiums",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_source_tx_limits",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Source Data Movement/ecm/pipleline_master"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_source_reference_master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Lob Company Data Pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_source_lobcompany",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute Gen Address Data Pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Agency and Producer Data Pipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_source_genaddress",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute Party Data Pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Lob Company Data Pipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_source_party",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute Agency and Producer Data Pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Party Data Pipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_source_agencyproducer",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute Coverage Code Data Pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Gen Address Data Pipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_source_coveragecode",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute Limit Ded type Data Pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Coverage Code Data Pipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_source_limitDedType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Source Data Movement/ecm/pipleline_master"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_stage_party_master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Party JSON Pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_stage_party",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute Party API Pipeline",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Execute Party JSON Pipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_api_party",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute Agency JSON Pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Party JSON Pipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_stage_agency",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute Party API Pipeline for Agency",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Agency JSON Pipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_api_agency",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Staging Data Movement/pipeline_master"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_stage_policy_master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Party related Pipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_stage_policy",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "risk",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Location",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_stage_risk",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CovDedLimit",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "risk",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_stage_cov_ded_limit",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "aggSections",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CovDedLimit",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_stage_policySectionWithCoverages",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "aggPolicies",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "aggSections",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_stage_final_policy",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Location",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "addInsuredOnly",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_stage_location",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "updateAgentAndClientData",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Pipeline1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_target_updateagentparty",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute Party related Pipeline",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_stage_party_master",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "addInsuredOnly",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "updateAgentAndClientData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_temp_clientPartToBlank",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"isRiskUpdateOnly": {
						"type": "Boolean"
					},
					"isLimitUpdateOnly": {
						"type": "Boolean"
					}
				},
				"folder": {
					"name": "Staging Data Movement/pipeline_master"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_stage_risk')]",
				"[concat(variables('factoryId'), '/pipelines/pl_stage_policySectionWithCoverages')]",
				"[concat(variables('factoryId'), '/pipelines/pl_target_updateagentparty')]",
				"[concat(variables('factoryId'), '/pipelines/pl_stage_party_master')]",
				"[concat(variables('factoryId'), '/pipelines/pl_temp_clientPartToBlank')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_source_target_policy_master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Source Policy Master Pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_source_policy_master",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute Stage Policy Master Pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Source Policy Master Pipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_stage_policy_master",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute Target Master Pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Stage Policy Master Pipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_api_policy",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Soure to Target"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_source_policy_master')]",
				"[concat(variables('factoryId'), '/pipelines/pl_stage_policy_master')]"
			]
		}
	]
}